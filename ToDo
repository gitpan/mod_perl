
in no particular order:

get rid of basic_http_header usage

figure out why the heck filehandles used with file upload show up under
'unknown' in our symbol table dump, and why the heck they are even in the
symbol table (stems from CGI.pm now XA.pm)

Apache::Registry should honor __END__ and __DATA__,
but how to get it right?

improve the "stacked handlers" implementation, including:
-allowing all array-like operations besides push_handlers,
pop_handlers, shift_handlers, unshift_handlers, splice_handlers, etc.

-allow push_handlers to have an additional argument, an array ref,
which will be passed to the handler as arguments, e.g.
 $r->push_handlers("PerlHandler", \&some_sub, ['one', 'two', 'etc']);

-allow Perl*Handler's to have arguments in config files, e.g.:

 PerlHandler FooPackage [One Two Three]
 (calls &FooPackage::handler($r, "One", "Two", "Three");


complete <Perl></Perl> configuration section 

if Perl*Handler's are prototyped with $$ call it as a method?
(test with -DPERL_HANDLER_METHODS)

provide an optional and configurable Safe wrapper around embedded scripts

find good ways to decrease size of httpd (perl-runtime!)

more tests for the test suite

add more examples


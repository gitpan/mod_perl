=head1 NAME

APR::URI - Perl API for XXX




=head1 Synopsis

  use APR::URI ();

META: to be completed




=head1 Description

META: to be completed




=head1 API

C<APR::URI> provides the following functions and/or methods:




=head2 C<port_of_scheme>

META: Autogenerated - needs to be reviewed/completed

Return the default port for a given scheme.  The schemes recognized are
http, ftp, https, gopher, wais, nntp, snews, and prospero

  $ret = port_of_scheme($scheme_str);

=over 4

=item arg1: C<$scheme_str> (string)

The string that contains the current scheme

=item ret: C<$ret> (integer)

The default port for this scheme

=back





=head2 C<scheme>

META: Autogenerated - needs to be reviewed/completed

scheme ("http"/"ftp"/...)

  $ret = $obj->scheme($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::URI|docs::2.0::api::APR::URI>>)

=item arg2: C<$newval> (string)

=back





=head2 C<hostinfo>

META: Autogenerated - needs to be reviewed/completed

combined [user[:password]\@]host[:port]

  $ret = $obj->hostinfo($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::URI|docs::2.0::api::APR::URI>>)

=item arg2: C<$newval> (string)

=back





=head2 C<user>

META: Autogenerated - needs to be reviewed/completed

user name, as in http://user:passwd\@host:port/

  $ret = $obj->user($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::URI|docs::2.0::api::APR::URI>>)

=item arg2: C<$newval> (string)

=back





=head2 C<password>

META: Autogenerated - needs to be reviewed/completed

password, as in http://user:passwd\@host:port/

  $ret = $obj->password($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::URI|docs::2.0::api::APR::URI>>)

=item arg2: C<$newval> (string)

=back





=head2 C<hostname>

META: Autogenerated - needs to be reviewed/completed

hostname from URI (or from Host: header)

  $ret = $obj->hostname($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::URI|docs::2.0::api::APR::URI>>)

=item arg2: C<$newval> (string)

=back





=head2 C<path>

META: Autogenerated - needs to be reviewed/completed

the request path (or "/" if only scheme://host was given)

  $ret = $obj->path($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::URI|docs::2.0::api::APR::URI>>)

=item arg2: C<$newval> (string)

=back





=head2 C<query>

META: Autogenerated - needs to be reviewed/completed

Everything after a '?' in the path, if present

  $ret = $obj->query($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::URI|docs::2.0::api::APR::URI>>)

=item arg2: C<$newval> (string)

=back





=head2 C<fragment>

META: Autogenerated - needs to be reviewed/completed

Trailing "#fragment" string, if present

  $ret = $obj->fragment($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::URI|docs::2.0::api::APR::URI>>)

=item arg2: C<$newval> (string)

=back





=head2 C<is_initialized>

META: Autogenerated - needs to be reviewed/completed

has the structure been initialized

  $ret = $obj->is_initialized($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::URI|docs::2.0::api::APR::URI>>)

=item arg2: C<$newval> (number)

=back





=head2 C<dns_looked_up>

META: Autogenerated - needs to be reviewed/completed

has the DNS been looked up yet

  $ret = $obj->dns_looked_up($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::URI|docs::2.0::api::APR::URI>>)

=item arg2: C<$newval> (number)

=back





=head2 C<dns_resolved>

META: Autogenerated - needs to be reviewed/completed

has the dns been resolved yet

  $ret = $obj->dns_resolved($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::URI|docs::2.0::api::APR::URI>>)

=item arg2: C<$newval> (number)

=back




=head1 See Also

L<mod_perl 2.0 documentation|docs::2.0::index>.




=head1 Copyright

mod_perl 2.0 and its core modules are copyrighted under
The Apache Software License, Version 1.1.




=head1 Authors

L<The mod_perl development team and numerous
contributors|about::contributors::people>.

=cut


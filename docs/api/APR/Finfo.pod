=head1 NAME

APR::Finfo - Perl API for XXX




=head1 Synopsis

  use APR::Finfo ();

META: to be completed




=head1 Description

META: to be completed




=head1 API

C<APR::Finfo> provides the following functions and/or methods:




=head2 C<stat>

META: Autogenerated - needs to be reviewed/completed

get the specified file's stats.  The file is specified by filename,
instead of using a pre-opened file.

  $ret = $finfo->stat($fname, $wanted, $cont);

=over 4

=item arg1: C<$finfo> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

Where to store the information about the file, which is
never touched if the call fails.

=item arg2: C<$fname> (string)

The name of the file to stat.

=item arg3: C<$wanted> (string)

The desired apr_finfo_t fields, as a bit flag of APR_FINFO_ values

=item arg4: C<$cont> (integer)

the pool to use to allocate the new file.

=item ret: C<$ret> (integer)



=back





=head2 C<pool>

META: Autogenerated - needs to be reviewed/completed

Allocates memory and closes lingering handles in the specified pool

  $ret = $obj->pool($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (C<L<APR::Pool|docs::2.0::api::APR::Pool>>)

=back





=head2 C<valid>

META: Autogenerated - needs to be reviewed/completed

The bitmask describing valid fields of this apr_finfo_t structure
including all available 'wanted' fields and potentially more

  $ret = $obj->valid($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<protection>

META: Autogenerated - needs to be reviewed/completed

The access permissions of the file.  Mimics Unix access rights.

  $ret = $obj->protection($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<filetype>

META: Autogenerated - needs to be reviewed/completed

The type of file.  One of APR_REG, APR_DIR, APR_CHR, APR_BLK, APR_PIPE,
APR_LNK or APR_SOCK.  If the type is undetermined, the value is APR_NOFILE.
If the type cannot be determined, the value is APR_UNKFILE.

  $ret = $obj->filetype($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<user>

META: Autogenerated - needs to be reviewed/completed

The user id that owns the file

  $ret = $obj->user($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<group>

META: Autogenerated - needs to be reviewed/completed

The group id that owns the file

  $ret = $obj->group($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<inode>

META: Autogenerated - needs to be reviewed/completed

The inode of the file.

  $ret = $obj->inode($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<device>

META: Autogenerated - needs to be reviewed/completed

The id of the device the file is on.

  $ret = $obj->device($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (number)

=back





=head2 C<nlink>

META: Autogenerated - needs to be reviewed/completed

The number of hard links to the file.

  $ret = $obj->nlink($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<size>

META: Autogenerated - needs to be reviewed/completed

The size of the file

  $ret = $obj->size($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<csize>

META: Autogenerated - needs to be reviewed/completed

The storage size consumed by the file

  $ret = $obj->csize($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (integer)

=back





=head2 C<atime>

META: Autogenerated - needs to be reviewed/completed

The time the file was last accessed

  $ret = $obj->atime($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (number)

=back





=head2 C<mtime>

META: Autogenerated - needs to be reviewed/completed

The time the file was last modified

  $ret = $obj->mtime($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (number)

=back





=head2 C<ctime>

META: Autogenerated - needs to be reviewed/completed

The time the file was last changed

  $ret = $obj->ctime($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (number)

=back





=head2 C<fname>

META: Autogenerated - needs to be reviewed/completed

The pathname of the file (possibly unrooted)

  $ret = $obj->fname($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (string)

=back





=head2 C<name>

META: Autogenerated - needs to be reviewed/completed

The file's name (no path) in filesystem case

  $ret = $obj->name($newval);

=over 4

=item arg1: C<$obj> (C<L<APR::Finfo|docs::2.0::api::APR::Finfo>>)

=item arg2: C<$newval> (string)

=back




=head1 See Also

L<mod_perl 2.0 documentation|docs::2.0::index>.




=head1 Copyright

mod_perl 2.0 and its core modules are copyrighted under
The Apache Software License, Version 1.1.




=head1 Authors

L<The mod_perl development team and numerous
contributors|about::contributors::people>.

=cut


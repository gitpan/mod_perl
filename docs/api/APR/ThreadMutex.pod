=head1 NAME

APR::ThreadMutex - Perl API for XXX




=head1 Synopsis

  use APR::ThreadMutex ();

META: to be completed




=head1 Description

META: to be completed




=head1 API

C<APR::ThreadMutex> provides the following functions and/or methods:




=head2 C<DESTROY>

META: Autogenerated - needs to be reviewed/completed

Destroy the mutex and free the memory associated with the lock.

  $mutex->DESTROY();

=over 4

=item obj: C<$mutex> (C<L<APR::ThreadMutex|docs::2.0::api::APR::ThreadMutex>>)

the mutex to destroy.

=item ret: no return value

=back





=head2 C<lock>

META: Autogenerated - needs to be reviewed/completed

Acquire the lock for the given mutex. If the mutex is already locked,
the current thread will be put to sleep until the lock becomes available.

  $ret = $mutex->lock();

=over 4

=item obj: C<$mutex> (C<L<APR::ThreadMutex|docs::2.0::api::APR::ThreadMutex>>)

the mutex on which to acquire the lock.

=item ret: C<$ret> (integer)



=back





=head2 C<pool_get>

META: Autogenerated - needs to be reviewed/completed

Get the pool used by this thread_mutex.

  $ret = $ob->pool_get();

=over 4

=item obj: C<$ob> (C<L<APR::ThreadMutex|docs::2.0::api::APR::ThreadMutex>>)



=item ret: C<$ret> (C<L<APR::Pool|docs::2.0::api::APR::Pool>>)

apr_pool_t the pool

=back





=head2 C<trylock>

META: Autogenerated - needs to be reviewed/completed

Attempt to acquire the lock for the given mutex. If the mutex has already
been acquired, the call returns immediately with APR_EBUSY. Note: it
is important that the APR_STATUS_IS_EBUSY(s) macro be used to determine
if the return value was APR_EBUSY, for portability reasons.

  $ret = $mutex->trylock();

=over 4

=item obj: C<$mutex> (C<L<APR::ThreadMutex|docs::2.0::api::APR::ThreadMutex>>)

the mutex on which to attempt the lock acquiring.

=item ret: C<$ret> (integer)



=back





=head2 C<unlock>

META: Autogenerated - needs to be reviewed/completed

Release the lock for the given mutex.

  $ret = $mutex->unlock();

=over 4

=item obj: C<$mutex> (C<L<APR::ThreadMutex|docs::2.0::api::APR::ThreadMutex>>)

the mutex from which to release the lock.

=item ret: C<$ret> (integer)



=back




=head1 See Also

L<mod_perl 2.0 documentation|docs::2.0::index>.




=head1 Copyright

mod_perl 2.0 and its core modules are copyrighted under
The Apache Software License, Version 1.1.




=head1 Authors

L<The mod_perl development team and numerous
contributors|about::contributors::people>.

=cut


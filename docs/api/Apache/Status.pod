=head1 NAME

Apache::Status - Embedded interpreter status information




=head1 Synopsis

  <Location /perl-status>
      SetHandler modperl
      PerlResponseHandler Apache::Status
  </Location>





=head1 Description

The B<Apache::Status> module provides some information
about the status of the Perl interpreter embedded in the server.

Configure like so:

  <Location /perl-status>
       SetHandler modperl
       PerlResponseHandler Apache::Status
  </Location>

Notice that under the "modperl" core handler the I<Environment> menu
option will show only the environment under that handler. To see the
environment seen by handlers running under the "perl-script" core
handler, configure C<Apache::Status> as:

  <Location /perl-status>
       SetHandler perl-script
       PerlResponseHandler Apache::Status
  </Location>

Other modules can "plugin" a menu item like so:

  Apache::Status->menu_item(
     'DBI' => "DBI connections", #item for Apache::DBI module
     sub {
         my($r,$q) = @_; #request and CGI objects
         my(@strings);
         push @strings,  "blobs of html";
         return \@strings;     #return an array ref
     }
  ) if Apache->module("Apache::Status"); #only if Apache::Status is loaded

B<WARNING>: Apache::Status must be loaded before these modules via the 
PerlModule or PerlRequire directives.





=head1 Options

=over 4

=item StatusOptionsAll

This single directive will enable all of the options described below.

  PerlSetVar StatusOptionsAll On

=item StatusDumper

When browsing symbol tables, the values of arrays, hashes and scalars
can be viewed via B<Data::Dumper> if this configuration variable is set
to On:

  PerlSetVar StatusDumper On

=item StatusPeek

With this option On and the B<Apache::Peek> module installed, 
functions and variables can be viewed ala B<Devel::Peek> style:

  PerlSetVar StatusPeek On

=item StatusLexInfo

With this option On and the B<B::LexInfo> module installed,
subroutine lexical variable information can be viewed.

  PerlSetVar StatusLexInfo On

=item StatusDeparse

With this option On and B<B::Deparse> version 0.59 or higher 
(included in Perl 5.005_59+), subroutines can be "deparsed".

  PerlSetVar StatusDeparse On

Options can be passed to B::Deparse::new like so:

  PerlSetVar StatusDeparseOptions "-p -sC"

See the B<B::Deparse> manpage for details.

=item StatusTerse

With this option On, text-based op tree graphs of subroutines can be 
displayed, thanks to B<B::Terse>.

  PerlSetVar StatusTerse On

=item StatusTerseSize

With this option On and the B<B::TerseSize> module installed,
text-based op tree graphs of subroutines and their size can be
displayed.  See the B<B::TerseSize> docs for more info.

  PerlSetVar StatusTerseSize On

=item StatusTerseSizeMainSummary

With this option On and the B<B::TerseSize> module installed, a
"Memory Usage" will be added to the Apache::Status main menu.  This
option is disabled by default, as it can be rather cpu intensive to
summarize memory usage for the entire server.  It is strongly
suggested that this option only be used with a development server
running in B<-X> mode, as the results will be cached.

  PerlSetVar StatusTerseSizeMainSummary On

=item StatusGraph

When B<StatusDumper> is enabled, another link "OP Tree Graph" will be
present with the dump if this configuration variable is set to On:

  PerlSetVar StatusGraph

This requires the B module (part of the Perl compiler kit) and
B::Graph (version 0.03 or higher) module to be installed along with
the B<dot> program.

Dot is part of the graph visualization toolkit from AT&T:
C<http://www.research.att.com/sw/tools/graphviz/>).

B<WARNING>: Some graphs may produce very large images, some graphs may
produce no image if B::Graph's output is incorrect.

=item Dot

Location of the dot program for StatusGraph,
if other than /usr/bin or /usr/local/bin

=item GraphDir

Directory where StatusGraph should write it's temporary image files.
Default is $ServerRoot/logs/b_graphs

=back





=head1 Prerequisites

The I<Devel::Symdump> module, version B<2.00> or higher.





=head1 Copyright

mod_perl 2.0 and its core modules are copyrighted under
The Apache Software License, Version 1.1.




=head1 See Also

perl(1), Apache(3), Devel::Symdump(3), Data::Dumper(3), B(3),
B::Graph(3), L<mod_perl 2.0 documentation|docs::2.0::index>.




=head1 Authors

Doug MacEachern with contributions from Stas Bekman

=cut

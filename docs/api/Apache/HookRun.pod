=head1 NAME

Apache::HookRun - Perl API for XXX




=head1 Synopsis

  use Apache::HookRun ();

META: to be completed




=head1 Description

META: to be completed




=head1 API

C<Apache::HookRun> provides the following functions and/or methods:




=head2 C<die>

META: Autogenerated - needs to be reviewed/completed

Kill the current request

  $r->die($type);

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

The current request

=item arg2: C<$type> (XXX)

Why the request is dieing

=item ret: no return value

=back





=head2 C<invoke_handler>

META: Autogenerated - needs to be reviewed/completed

Run the handler phase of each module until a module accepts the
responsibility of serving the request

  $ret = $r->invoke_handler();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

The current request

=item ret: C<$ret> (integer)

The status of the current request

=back





=head2 C<run_access_checker>

META: Autogenerated - needs to be reviewed/completed

This hook is used to apply additional access control to this resource.
It runs *before* a user is authenticated, so this hook is really to
apply additional restrictions independent of a user. It also runs
independent of 'Require' directive usage.

  $ret = $r->run_access_checker();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

the current request

=item ret: C<$ret> (integer)

Apache::OK, Apache::DECLINED, or Apache::HTTP_...

=back





=head2 C<run_auth_checker>

META: Autogenerated - needs to be reviewed/completed

This hook is used to check to see if the resource being requested is
available for the authenticated user (r-E<gt>user and
r-E<gt>ap_auth_type).  It runs after the access_checker and
check_user_id hooks. Note that it will *only* be called if Apache
determines that access control has been applied to this resource
(through a 'Require' directive).

  $ret = $r->run_auth_checker();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

the current request

=item ret: C<$ret> (integer)

Apache::OK, Apache::DECLINED, or Apache::HTTP_...

=back





=head2 C<run_check_user_id>

META: Autogenerated - needs to be reviewed/completed

This hook is used to analyze the request headers, authenticate the
user, and set the user information in the request record (r-E<gt>user
and r-E<gt>ap_auth_type). This hook is only run when Apache determines
that authentication/authorization is required for this resource (as
determined by the 'Require' directive). It runs after the
access_checker hook, and before the auth_checker hook.

  $ret = $r->run_check_user_id();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

The current request

=item ret: C<$ret> (integer)

Apache::OK, Apache::DECLINED, or Apache::HTTP_...

=back





=head2 C<run_create_request>

META: Autogenerated - needs to be reviewed/completed

Gives modules a chance to create their request_config entry when the
request is created.

  $ret = $r->run_create_request();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

The current request

=item ret: C<$ret> (integer)

Apache::OK, Apache::DECLINED, or Apache::HTTP_...

=back





=head2 C<run_fixups>

META: Autogenerated - needs to be reviewed/completed

Allows modules to perform module-specific fixing of header fields.  This
is invoked just before any content-handler

  $ret = $r->run_fixups();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

The current request

=item ret: C<$ret> (integer)

Apache::OK, Apache::DECLINED, or Apache::HTTP_...

=back





=head2 C<run_handler>

META: Autogenerated - needs to be reviewed/completed

Run the handler functions for each module

  $ret = $r->run_handler();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

The request_rec

=item ret: C<$ret> (integer)


=back

non-wildcard handlers should HOOK_MIDDLE, wildcard HOOK_LAST



=head2 C<run_header_parser>

META: Autogenerated - needs to be reviewed/completed

Run the header parser functions for each module

  $ret = $r->run_header_parser();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

The current request

=item ret: C<$ret> (integer)

Apache::OK or Apache::DECLINED

=back





=head2 C<run_log_transaction>

META: Autogenerated - needs to be reviewed/completed

This hook allows modules to perform any module-specific logging activities
over and above the normal server things.

  $ret = $r->run_log_transaction();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

The current request

=item ret: C<$ret> (integer)

Apache::OK, Apache::DECLINED, or Apache::HTTP_...

=back





=head2 C<run_map_to_storage>

META: Autogenerated - needs to be reviewed/completed

This hook allow modules to set the per_dir_config based on their own
context (such as E<lt>ProxyE<gt> sections) and responds to contextless
requests such as TRACE that need no security or filesystem mapping.
based on the filesystem.

  $ret = $r->run_map_to_storage();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

The current request

=item ret: C<$ret> (integer)

Apache::DONE (or Apache::HTTP_) if this contextless request was just
fulfilled (such as TRACE), OK if this is not a file, and
Apache::DECLINED if this is a file.  The core map_to_storage
(HOOK_RUN_LAST) will directory_walk and file_walk the r-E<gt>filename.

=back





=head2 C<run_post_read_request>

META: Autogenerated - needs to be reviewed/completed

post_read_request --- run right after read_request or
internal_redirect, and not run during any subrequests.  This hook
allows modules to affect the request immediately after the request has
been read, and before any other phases have been processes.  This
allows modules to make decisions based upon the input header fields

  $ret = $r->run_post_read_request();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

The current request

=item ret: C<$ret> (integer)

Apache::OK or Apache::DECLINED

=back





=head2 C<run_translate_name>

META: Autogenerated - needs to be reviewed/completed

This hook allow modules an opportunity to translate the URI into an
actual filename.  If no modules do anything special, the server's
default rules will be followed.

  $ret = $r->run_translate_name();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

The current request

=item ret: C<$ret> (integer)

Apache::OK, Apache::DECLINED, or Apache::HTTP_...

=back





=head2 C<run_type_checker>

META: Autogenerated - needs to be reviewed/completed

This routine is called to determine and/or set the various document
type information bits, like Content-type (via r-E<gt>content_type),
language, etc.

  $ret = $r->run_type_checker();

=over 4

=item arg1: C<$r> (C<L<Apache::RequestRec|docs::2.0::api::Apache::RequestRec>>)

the current request

=item ret: C<$ret> (integer)

Apache::OK, Apache::DECLINED, or Apache::HTTP_...

=back




=head1 See Also

L<mod_perl 2.0 documentation|docs::2.0::index>.




=head1 Copyright

mod_perl 2.0 and its core modules are copyrighted under
The Apache Software License, Version 1.1.




=head1 Authors

L<The mod_perl development team and numerous
contributors|about::contributors::people>.

=cut

